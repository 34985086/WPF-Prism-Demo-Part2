<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Combo Box Style -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" 
                                      Template="{DynamicResource ToggleButtonControlTemplate}" 
                                      Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
                        <ContentPresenter HorizontalAlignment="Left" 
                                          Margin="3,3,23,3" 
                                          x:Name="ContentSite" 
                                          VerticalAlignment="Center" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          IsHitTestVisible="False"/>

                        <TextBox x:Name="PART_EditableTextBox" 
                                 Visibility="Hidden" 
                                 HorizontalAlignment="Left" 
                                 Margin="3,3,23,3" 
                                 Style="{x:Null}" 
                                 VerticalAlignment="Center" 
                                 Focusable="True" 
                                 Background="Transparent" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}" 
                                 Foreground="{DynamicResource MainAppColour}"/>

                        <Popup x:Name="Popup" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               Placement="Bottom" 
                               Focusable="False" 
                               AllowsTransparency="True" 
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" 
                                        Background="{DynamicResource AppBackground}" 
                                        BorderBrush="{DynamicResource MainAppColour}" 
                                        BorderThickness="1" 
                                        CornerRadius="3" 
                                        Margin="0,2,0,0"/>
                                <ScrollViewer Margin="4,6,4,6" 
                                              Style="{DynamicResource JamSoftScrollViewer}" 
                                              SnapsToDevicePixels="True" 
                                              HorizontalScrollBarVisibility="Auto" 
                                              VerticalScrollBarVisibility="Auto" 
                                              CanContentScroll="True">

                                    <!-- The StackPanel is used to display the children by setting IsItemsHost to be True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>

                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- This forces the DropDown to have a minimum size if it is empty -->
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                            <Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" 
                       HorizontalAlignment="Stretch" 
                       x:Name="Rectangle" 
                       VerticalAlignment="Stretch" 
                       Width="Auto" 
                       Height="Auto" 
                       RadiusX="3" 
                       RadiusY="3" 
                       Fill="{DynamicResource MainAppColour}" 
                       Stroke="Black" 
                       SnapsToDevicePixels="True"/>
            <Rectangle Grid.Column="0" 
                       HorizontalAlignment="Stretch" 
                       VerticalAlignment="Stretch" 
                       Width="Auto" 
                       Height="Auto" 
                       RadiusX="3" 
                       RadiusY="3" 
                       Fill="{DynamicResource AppBackground}" 
                       Stroke="{DynamicResource MainAppColour}" 
                       Margin="2,2,0,2" 
                       StrokeThickness="0" 
                       x:Name="rectangle"/>
            <Path Grid.Column="1" 
                  HorizontalAlignment="Center" 
                  x:Name="Arrow" 
                  VerticalAlignment="Center" 
                  Fill="Black" 
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainAppColour}"/>
                <Setter Property="Fill" TargetName="Rectangle" Value="Black"/>
                <Setter Property="RadiusX" TargetName="Rectangle" Value="3"/>
                <Setter Property="RadiusY" TargetName="Rectangle" Value="3"/>
                <Setter Property="Margin" TargetName="rectangle" Value="1,1,0,1"/>
                <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource MainAppColour}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Margin" TargetName="rectangle" Value="2,2,0,2"/>
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource DefaultGradient}"/>
                <Setter Property="SnapsToDevicePixels" TargetName="Rectangle" Value="True"/>
                <Setter Property="RadiusX" TargetName="Rectangle" Value="3"/>
                <Setter Property="RadiusY" TargetName="Rectangle" Value="3"/>
                <Setter Property="Margin" TargetName="Rectangle" Value="0,0,0,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow"/>
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource DefaultGradient}"/>
                <Setter Property="Opacity" TargetName="Rectangle" Value="0.7"/>
                <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource Black}"/>
                <Setter Property="RadiusX" TargetName="Rectangle" Value="3"/>
                <Setter Property="RadiusY" TargetName="Rectangle" Value="3"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="JamSoftScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" 
                                                Grid.Row="0" 
                                                Margin="{TemplateBinding Padding}" 
                                                Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                        <!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Grid.Column="0" 
                                   Grid.Row="1" 
                                   x:Name="PART_HorizontalScrollBar" 
                                   Orientation="Horizontal" 
                                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Minimum="0" 
                                   Maximum="{TemplateBinding ScrollableWidth}" 
                                   AutomationProperties.AutomationId="HorizontalScrollBar"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Grid.Column="1" 
                                   Grid.Row="0" 
                                   x:Name="PART_VerticalScrollBar" 
                                   Orientation="Vertical" 
                                   Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                   Minimum="0" 
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   AutomationProperties.AutomationId="VerticalScrollBar"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>